{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>[!CAUTION] These design documents are generated by AI and may not be fully accurate or complete. They are intended to provide a starting point for understanding the system architecture and design patterns used in the template-fastapi application.</p>"},{"location":"#template-fastapi-documentation","title":"Template FastAPI Documentation","text":"<p>Welcome to the comprehensive documentation for the template-fastapi application. This documentation covers the complete feature set, API endpoints, and operational guides.</p>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10 or higher</li> <li>uv package manager</li> <li>Azure account with appropriate service subscriptions</li> </ul>"},{"location":"#installation-and-setup","title":"Installation and Setup","text":"<pre><code># Clone and install\ngit clone https://github.com/ks6088ts-labs/template-fastapi.git\ncd template-fastapi\nmake install-deps-dev\n\n# Configure environment\ncp .env.template .env\n# Edit .env with your Azure service credentials\n\n# Start development server\nmake dev\n</code></pre> <p>The application will be available at http://localhost:8000 with interactive API documentation at http://localhost:8000/docs.</p>"},{"location":"#docker-setup","title":"Docker Setup","text":"<p>See ks6088ts/template-fastapi for Docker images.</p> <pre><code># Configure environment\ncp .env.template .env\n# Edit .env with your Azure service credentials\n\n# Run Docker container\ndocker run --rm -p 8000:8000 \\\n  --volume \"$PWD/.env:/app/.env\" \\\n  ks6088ts/template-fastapi:latest\n</code></pre>"},{"location":"#architecture-overview","title":"Architecture Overview","text":"<p>For detailed architecture information, see:</p> <ul> <li>External API Specification - API endpoints, cloud services integration</li> <li>Internal Design Specification - System architecture, data flow, and design patterns</li> </ul>"},{"location":"#service-guides","title":"Service Guides","text":""},{"location":"#items-management","title":"Items Management","text":"<p>Basic CRUD operations with Azure CosmosDB backend.</p> <pre><code># Run FastAPI server\nmake dev\n\n# Test endpoints\ncurl -X GET \"http://localhost:8000/items/\"\ncurl -X GET \"http://localhost:8000/items/search/?q=hammer\"\n</code></pre>"},{"location":"#file-management","title":"File Management","text":"<p>Upload, download, and manage files using Azure Blob Storage.</p> <pre><code># Upload file via CLI\nuv run python scripts/files.py upload-file ./path/to/file.txt\n\n# List files\nuv run python scripts/files.py list-files\n\n# Download file\nuv run python scripts/files.py download-file \"file.txt\"\n</code></pre>"},{"location":"#restaurant-discovery","title":"Restaurant Discovery","text":"<p>Geospatial search and vector-based restaurant recommendations.</p> <pre><code># Import sample data\nuv run python scripts/foodies_restaurants.py import-data --csv-file ./datasets/foodies_restaurants.csv\n\n# Search by text\nuv run python scripts/foodies_restaurants.py search --query \"sushi\"\n\n# Find nearby restaurants\nuv run python scripts/foodies_restaurants.py find-nearby --latitude 35.681167 --longitude 139.767052 --distance 5.0\n</code></pre>"},{"location":"#speech-transcription","title":"Speech Transcription","text":"<p>Batch audio transcription using Azure AI Speech.</p> <pre><code># Create transcription job\nAUDIO_URL=\"https://your-storage.blob.core.windows.net/audio/file.wav?sas-token\"\nuv run python scripts/speeches.py create-transcription \"$AUDIO_URL\" --locale \"ja-JP\"\n\n# Monitor job status\nuv run python scripts/speeches.py get-transcription \"$JOB_ID\"\n\n# Get results when completed\nuv run python scripts/speeches.py get-transcription-result \"https://result-url\"\n</code></pre>"},{"location":"#agent-systems","title":"Agent Systems","text":""},{"location":"#langgraph-agents","title":"LangGraph Agents","text":"<p>AI agents with custom tools for calculations, time queries, and web search.</p> <pre><code># Interactive chat\nuv run python scripts/agents_langgraph.py interactive\n\n# Single query\nuv run python scripts/agents_langgraph.py chat \"\u4eac\u90fd\u306e\u4eca\u306e\u6642\u9593\u304b\u308912\u6642\u9593\u5f8c\u306f\u4f55\u6642\uff1f\"\n\n# Available tools\nuv run python scripts/agents_langgraph.py tools\n\n# API endpoint\ncurl -X GET \"http://localhost:8000/agents/langgraph/tools\"\n</code></pre>"},{"location":"#azure-ai-foundry-agents","title":"Azure AI Foundry Agents","text":"<p>Enterprise-grade conversational AI with thread management.</p> <pre><code># Create agent\nuv run python scripts/agents_azure_ai_foundry.py create-agent \"Research Assistant\" --instructions \"You are a helpful research assistant.\"\n\n# List agents\nuv run python scripts/agents_azure_ai_foundry.py list-agents\n\n# Chat with agent\nuv run python scripts/agents_azure_ai_foundry.py chat &lt;agent_id&gt; \"Tell me about machine learning trends\"\n</code></pre>"},{"location":"#real-time-chat","title":"Real-time Chat","text":"<p>WebSocket-based chat interface with agent integration.</p> <pre><code># Start server\nmake dev\n\n# Access chat interface\nopen http://localhost:8000/chats/\n</code></pre>"},{"location":"#microsoft-graph-integration","title":"Microsoft Graph Integration","text":"<p>Access SharePoint sites and user profiles.</p> <pre><code># Get access token\nuv run python scripts/microsoft_graphs.py get-access-token\n\n# Get user profile\nuv run python scripts/microsoft_graphs.py get-my-profile --access-token $ACCESS_TOKEN\n\n# Access SharePoint sites\nuv run python scripts/microsoft_graphs.py get-sites --site-id $SITE_ID --access-token $ACCESS_TOKEN\n</code></pre>"},{"location":"#development-and-testing","title":"Development and Testing","text":""},{"location":"#running-tests","title":"Running Tests","text":"<pre><code># All tests\nmake test\n\n# Specific test file\npytest tests/test_api.py -v\n\n# With coverage\npytest --cov=template_fastapi\n</code></pre>"},{"location":"#code-quality","title":"Code Quality","text":"<pre><code># Format code\nmake format\n\n# Lint code\nmake lint\n\n# Run all CI checks\nmake ci-test\n</code></pre>"},{"location":"#docker-development","title":"Docker Development","text":"<pre><code># Build and run with Docker\nmake docker-build\nmake docker-run\n\n# Full Docker CI pipeline\nmake ci-test-docker\n</code></pre>"},{"location":"#monitoring-and-observability","title":"Monitoring and Observability","text":""},{"location":"#logging-configuration","title":"Logging Configuration","text":"<p>Configure log levels via environment variables:</p> <pre><code># In .env file\nLOG_LEVEL=DEBUG  # DEBUG, INFO, WARNING, ERROR, CRITICAL\n</code></pre>"},{"location":"#application-insights","title":"Application Insights","text":"<p>Enable telemetry by setting:</p> <pre><code>APPLICATIONINSIGHTS_CONNECTION_STRING=\"your-connection-string\"\n</code></pre>"},{"location":"#health-monitoring","title":"Health Monitoring","text":"<pre><code># Check service health\ncurl -X GET \"http://localhost:8000/demos/roll_dice\"  # Should return 1-6\ncurl -X GET \"http://localhost:8000/agents/langgraph/health\"\n</code></pre>"},{"location":"#azure-services-configuration","title":"Azure Services Configuration","text":""},{"location":"#required-azure-services","title":"Required Azure Services","text":"<ul> <li>Azure CosmosDB: Document database for items and restaurants</li> <li>Azure Blob Storage: File storage and management</li> <li>Azure OpenAI: Language models for AI features</li> <li>Azure AI Speech: Batch transcription services</li> <li>Azure AI Foundry: Enterprise AI agent platform</li> <li>Application Insights: Monitoring and telemetry</li> </ul>"},{"location":"#service-setup-tips","title":"Service Setup Tips","text":"<pre><code># Enable CosmosDB local auth (development only)\naz resource update \\\n  --resource-group $RESOURCE_GROUP \\\n  --name $COSMOS_DB_ACCOUNT_NAME \\\n  --resource-type \"Microsoft.DocumentDB/databaseAccounts\" \\\n  --set properties.disableLocalAuth=false\n</code></pre>"},{"location":"#deployment","title":"Deployment","text":""},{"location":"#azure-functions","title":"Azure Functions","text":"<p>Deploy as serverless functions:</p> <pre><code># Export requirements\nuv export --format requirements-txt --no-dev --no-hashes --output-file requirements.txt\n\n# Deploy with Azure Functions Core Tools\nfunc azure functionapp publish &lt;function-app-name&gt;\n</code></pre>"},{"location":"#container-deployment","title":"Container Deployment","text":"<pre><code># Build production image\ndocker build -t template-fastapi .\n\n# Run with environment file\ndocker run --env-file .env -p 8000:8000 template-fastapi\n</code></pre>"},{"location":"#references","title":"References","text":"<ul> <li>FastAPI Documentation</li> <li>Azure AI Services Documentation</li> <li>LangGraph Documentation</li> <li>Microsoft Graph API</li> <li>OpenTelemetry Python</li> </ul>"},{"location":"external-specification/","title":"External specification","text":"<p>[!CAUTION] These design documents are generated by AI and may not be fully accurate or complete. They are intended to provide a starting point for understanding the system architecture and design patterns used in the template-fastapi application.</p>"},{"location":"external-specification/#external-api-specification","title":"External API Specification","text":""},{"location":"external-specification/#overview","title":"Overview","text":"<p>The template-fastapi application provides a comprehensive REST API built with FastAPI, integrating multiple Azure cloud services to deliver enterprise-grade functionality for content management, AI-powered conversations, and data processing.</p>"},{"location":"external-specification/#api-services","title":"API Services","text":""},{"location":"external-specification/#1-items-management-api","title":"1. Items Management API","text":"<p>Base Path: <code>/items/</code></p> <p>Purpose: Core CRUD operations for item management with Azure CosmosDB backend.</p> <p>Endpoints:</p> <ul> <li><code>GET /items/</code> - List all items with pagination</li> <li><code>GET /items/{item_id}</code> - Retrieve specific item</li> <li><code>POST /items/</code> - Create new item</li> <li><code>PUT /items/{item_id}</code> - Update existing item</li> <li><code>DELETE /items/{item_id}</code> - Delete item</li> <li><code>GET /items/search/?q={query}</code> - Search items by text</li> </ul> <p>Data Model:</p> <pre><code>{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"price\": 0.0,\n  \"tax\": 0.0\n}\n</code></pre>"},{"location":"external-specification/#2-file-management-api","title":"2. File Management API","text":"<p>Base Path: <code>/files/</code></p> <p>Purpose: File upload, storage, and retrieval using Azure Blob Storage.</p> <p>Endpoints:</p> <ul> <li><code>GET /files/</code> - List files with optional prefix filter</li> <li><code>POST /files/upload</code> - Upload single file</li> <li><code>POST /files/upload-multiple</code> - Upload multiple files</li> <li><code>GET /files/{filename}</code> - Download file</li> <li><code>GET /files/{filename}/info</code> - Get file metadata</li> <li><code>DELETE /files/{filename}</code> - Delete single file</li> <li><code>DELETE /files/</code> - Delete multiple files (request body)</li> </ul> <p>Features:</p> <ul> <li>Automatic content type detection</li> <li>File metadata tracking</li> <li>Bulk operations support</li> </ul>"},{"location":"external-specification/#3-restaurant-discovery-api","title":"3. Restaurant Discovery API","text":"<p>Base Path: <code>/foodies/restaurants/</code></p> <p>Purpose: Restaurant management with geospatial search capabilities.</p> <p>Endpoints:</p> <ul> <li><code>GET /restaurants/</code> - List restaurants with pagination</li> <li><code>GET /restaurants/{id}</code> - Get restaurant details</li> <li><code>POST /restaurants/</code> - Create new restaurant</li> <li><code>PUT /restaurants/{id}</code> - Update restaurant</li> <li><code>DELETE /restaurants/{id}</code> - Delete restaurant</li> <li><code>GET /restaurants/search/?query={text}</code> - Vector-based text search</li> <li><code>GET /restaurants/near/?latitude={lat}&amp;longitude={lng}</code> - Geospatial proximity search</li> </ul> <p>Search Features:</p> <ul> <li>Text-based vector search using embeddings</li> <li>Location-based proximity search with configurable radius</li> <li>Pagination support for all list operations</li> </ul>"},{"location":"external-specification/#4-speech-transcription-api","title":"4. Speech Transcription API","text":"<p>Base Path: <code>/speeches/transcriptions/</code></p> <p>Purpose: Batch audio transcription using Azure AI Speech Services.</p> <p>Endpoints:</p> <ul> <li><code>GET /transcriptions/</code> - List all transcription jobs</li> <li><code>POST /transcriptions/</code> - Create transcription job</li> <li><code>GET /transcriptions/{job_id}</code> - Get job status</li> <li><code>GET /transcriptions/{job_id}/files</code> - List result files</li> <li><code>GET /transcriptions/{job_id}/result?file_url={url}</code> - Get transcription result</li> <li><code>DELETE /transcriptions/{job_id}</code> - Delete job</li> </ul> <p>Workflow:</p> <ol> <li>Submit audio URLs for batch processing</li> <li>Monitor job status (Created \u2192 Running \u2192 Succeeded/Failed)</li> <li>Retrieve transcription results when complete</li> </ol>"},{"location":"external-specification/#5-agent-based-conversation-api","title":"5. Agent-Based Conversation API","text":""},{"location":"external-specification/#langgraph-agents","title":"LangGraph Agents","text":"<p>Base Path: <code>/agents/langgraph/</code></p> <p>Purpose: AI agents with custom tools for mathematical calculations, web search, and time queries.</p> <p>Endpoints:</p> <ul> <li><code>GET /tools</code> - List available agent tools</li> </ul> <p>Available Tools:</p> <ul> <li>Calculator: Mathematical expression evaluation</li> <li>Current Time: Timezone-aware time queries</li> <li>Search: Web search capabilities</li> </ul>"},{"location":"external-specification/#azure-ai-foundry-agents","title":"Azure AI Foundry Agents","text":"<p>Base Path: <code>/agents/azure-ai-foundry/</code></p> <p>Purpose: Thread-based conversational AI using Azure AI Foundry platform.</p> <p>Agent Management:</p> <ul> <li><code>GET /</code> - List agents</li> <li><code>POST /</code> - Create agent</li> <li><code>GET /{agent_id}</code> - Get agent details</li> <li><code>DELETE /{agent_id}</code> - Delete agent</li> <li><code>POST /{agent_id}/chat</code> - Chat with agent</li> </ul> <p>Thread Management:</p> <ul> <li><code>GET /threads/</code> - List conversation threads</li> <li><code>POST /threads/</code> - Create new thread</li> <li><code>GET /threads/{thread_id}</code> - Get thread details</li> <li><code>DELETE /threads/{thread_id}</code> - Delete thread</li> </ul>"},{"location":"external-specification/#6-real-time-chat-interface","title":"6. Real-time Chat Interface","text":"<p>Base Path: <code>/chats/</code></p> <p>Purpose: WebSocket-based real-time chat with HTML interface.</p> <p>Endpoints:</p> <ul> <li><code>GET /</code> - Chat interface (HTML page)</li> <li><code>WebSocket /ws/{client_id}</code> - Real-time messaging</li> </ul> <p>Features:</p> <ul> <li>Real-time bidirectional communication</li> <li>Multi-client support</li> <li>Agent integration capabilities</li> </ul>"},{"location":"external-specification/#7-demo-testing-api","title":"7. Demo &amp; Testing API","text":"<p>Base Path: <code>/demos/</code></p> <p>Purpose: Demonstration endpoints for testing and monitoring.</p> <p>Endpoints:</p> <ul> <li><code>GET /roll_dice</code> - Random dice roll (1-6)</li> <li><code>GET /flaky/{failure_rate}</code> - Configurable failure simulation (0-100%)</li> <li><code>GET /flaky/exception</code> - Guaranteed exception endpoint</li> <li><code>GET /heavy_sync/{sleep_ms}</code> - Simulated heavy processing</li> </ul>"},{"location":"external-specification/#azure-cloud-services-integration","title":"Azure Cloud Services Integration","text":""},{"location":"external-specification/#azure-cosmosdb","title":"Azure CosmosDB","text":"<ul> <li>Purpose: Primary database for items and restaurant data</li> <li>Features: Global distribution, automatic scaling, vector search support</li> <li>Configuration: Connection string in <code>AZURE_COSMOSDB_CONNECTION_STRING</code></li> </ul>"},{"location":"external-specification/#azure-blob-storage","title":"Azure Blob Storage","text":"<ul> <li>Purpose: File storage and management</li> <li>Features: Hierarchical namespace, metadata support, CDN integration</li> <li>Configuration: Connection string in <code>AZURE_BLOB_STORAGE_CONNECTION_STRING</code></li> </ul>"},{"location":"external-specification/#azure-openai-service","title":"Azure OpenAI Service","text":"<ul> <li>Purpose: LLM capabilities for agents and embeddings</li> <li>Models: GPT-4o for chat, text-embedding-3-small for search</li> <li>Configuration: Endpoint and API key in environment variables</li> </ul>"},{"location":"external-specification/#azure-ai-speech","title":"Azure AI Speech","text":"<ul> <li>Purpose: Batch audio transcription</li> <li>Features: Multi-language support, custom vocabulary, speaker diarization</li> <li>Configuration: API key and endpoint in environment variables</li> </ul>"},{"location":"external-specification/#azure-ai-foundry","title":"Azure AI Foundry","text":"<ul> <li>Purpose: Enterprise AI agent platform</li> <li>Features: Thread-based conversations, tool integration, model selection</li> <li>Configuration: Project endpoint and API key</li> </ul>"},{"location":"external-specification/#azure-application-insights","title":"Azure Application Insights","text":"<ul> <li>Purpose: Application monitoring and telemetry</li> <li>Features: Request tracing, performance monitoring, custom metrics</li> <li>Configuration: Connection string enables automatic instrumentation</li> </ul>"},{"location":"external-specification/#authentication-security","title":"Authentication &amp; Security","text":""},{"location":"external-specification/#current-implementation","title":"Current Implementation","text":"<ul> <li>No authentication required (template/development setup)</li> <li>Internal service-to-service authentication via API keys</li> <li>Azure services authenticate via connection strings</li> </ul>"},{"location":"external-specification/#production-recommendations","title":"Production Recommendations","text":"<ul> <li>Implement OAuth 2.0 / JWT authentication</li> <li>Use Azure Active Directory integration</li> <li>Enable API rate limiting</li> <li>Configure CORS policies</li> <li>Use Azure Key Vault for secrets management</li> </ul>"},{"location":"external-specification/#error-handling","title":"Error Handling","text":""},{"location":"external-specification/#standard-http-status-codes","title":"Standard HTTP Status Codes","text":"<ul> <li><code>200</code> - Success</li> <li><code>201</code> - Created</li> <li><code>400</code> - Bad Request (validation errors)</li> <li><code>404</code> - Not Found</li> <li><code>422</code> - Unprocessable Entity (Pydantic validation)</li> <li><code>500</code> - Internal Server Error</li> </ul>"},{"location":"external-specification/#error-response-format","title":"Error Response Format","text":"<pre><code>{\n  \"detail\": \"Error description in Japanese/English\",\n  \"type\": \"error_type\",\n  \"loc\": [\"field\", \"path\"] // For validation errors\n}\n</code></pre>"},{"location":"external-specification/#monitoring-observability","title":"Monitoring &amp; Observability","text":""},{"location":"external-specification/#structured-logging","title":"Structured Logging","text":"<ul> <li>Configurable log levels via <code>LOG_LEVEL</code> environment variable</li> <li>JSON-structured logs for production deployment</li> <li>Request/response logging with correlation IDs</li> </ul>"},{"location":"external-specification/#metrics-tracing","title":"Metrics &amp; Tracing","text":"<ul> <li>OpenTelemetry integration with Azure Application Insights</li> <li>Custom metrics for business operations</li> <li>Distributed tracing across service boundaries</li> </ul>"},{"location":"external-specification/#health-checks","title":"Health Checks","text":"<ul> <li>Built-in FastAPI health monitoring</li> <li>Azure service dependency health checks</li> <li>Container readiness and liveness probes</li> </ul>"},{"location":"external-specification/#api-versioning-compatibility","title":"API Versioning &amp; Compatibility","text":""},{"location":"external-specification/#current-version","title":"Current Version","text":"<ul> <li>API Version: 1.0</li> <li>No explicit versioning in URLs (future consideration)</li> <li>Backward compatibility maintained for minor updates</li> </ul>"},{"location":"external-specification/#future-considerations","title":"Future Considerations","text":"<ul> <li>URL-based versioning (<code>/v1/</code>, <code>/v2/</code>)</li> <li>Header-based versioning</li> <li>Feature flags for gradual rollouts</li> </ul>"},{"location":"internal-design/","title":"Internal design","text":"<p>[!CAUTION] These design documents are generated by AI and may not be fully accurate or complete. They are intended to provide a starting point for understanding the system architecture and design patterns used in the template-fastapi application.</p>"},{"location":"internal-design/#internal-design-specification","title":"Internal Design Specification","text":""},{"location":"internal-design/#architecture-overview","title":"Architecture Overview","text":"<p>The template-fastapi application follows a layered architecture pattern with clear separation of concerns, enabling maintainability, testability, and scalability.</p>"},{"location":"internal-design/#system-architecture","title":"System Architecture","text":"<pre><code>graph TB\n    Client[Client Applications]\n    LB[Load Balancer]\n\n    subgraph \"FastAPI Application\"\n        App[app.py - Main Application]\n        Router[Router Layer]\n        Logic[Business Logic Layer]\n        Repo[Repository Layer]\n        Models[Data Models]\n    end\n\n    subgraph \"Azure Cloud Services\"\n        CosmosDB[(Azure CosmosDB)]\n        BlobStorage[(Azure Blob Storage)]\n        OpenAI[Azure OpenAI]\n        Speech[Azure AI Speech]\n        AIFoundry[Azure AI Foundry]\n        AppInsights[Application Insights]\n    end\n\n    Client --&gt; LB\n    LB --&gt; App\n    App --&gt; Router\n    Router --&gt; Logic\n    Logic --&gt; Repo\n    Repo --&gt; Models\n\n    Repo --&gt; CosmosDB\n    Repo --&gt; BlobStorage\n    Repo --&gt; OpenAI\n    Repo --&gt; Speech\n    Repo --&gt; AIFoundry\n    App --&gt; AppInsights\n</code></pre>"},{"location":"internal-design/#package-structure-and-responsibilities","title":"Package Structure and Responsibilities","text":""},{"location":"internal-design/#core-application-template_fastapi","title":"Core Application (<code>template_fastapi/</code>)","text":"<pre><code>graph LR\n    subgraph \"Application Core\"\n        App[app.py]\n        Core[core.py]\n        Settings[settings/]\n        OpenTel[opentelemetry.py]\n    end\n\n    subgraph \"API Layer\"\n        Routers[routers/]\n        Items[items.py]\n        Files[files.py]\n        Foodies[foodies.py]\n        Speeches[speeches.py]\n        Chats[chats.py]\n        Demos[demos.py]\n        Agents[agents/]\n    end\n\n    subgraph \"Data Layer\"\n        Models[models/]\n        Repositories[repositories/]\n        Internals[internals/]\n    end\n\n    subgraph \"Infrastructure\"\n        Templates[templates/]\n        Static[static files]\n    end\n\n    App --&gt; Routers\n    App --&gt; Settings\n    App --&gt; OpenTel\n    Routers --&gt; Models\n    Routers --&gt; Repositories\n</code></pre>"},{"location":"internal-design/#package-responsibilities","title":"Package Responsibilities","text":""},{"location":"internal-design/#apppy-application-bootstrap","title":"<code>app.py</code> - Application Bootstrap","text":"<ul> <li>FastAPI application initialization</li> <li>Router registration and configuration</li> <li>Middleware setup (CORS, logging, monitoring)</li> <li>Azure Application Insights integration</li> <li>Telemetry and observability configuration</li> </ul>"},{"location":"internal-design/#routers-api-endpoint-handlers","title":"<code>routers/</code> - API Endpoint Handlers","text":"<ul> <li>Purpose: HTTP request routing and response handling</li> <li>Responsibilities:</li> <li>Request validation using Pydantic models</li> <li>HTTP status code management</li> <li>Error handling and exception transformation</li> <li>Business logic delegation to repositories</li> <li>Response formatting</li> </ul>"},{"location":"internal-design/#repositories-data-access-layer","title":"<code>repositories/</code> - Data Access Layer","text":"<ul> <li>Purpose: External service integration and data persistence</li> <li>Responsibilities:</li> <li>Azure service client management</li> <li>Data transformation between external APIs and internal models</li> <li>Connection pooling and retry logic</li> <li>Service-specific error handling</li> </ul>"},{"location":"internal-design/#models-data-models","title":"<code>models/</code> - Data Models","text":"<ul> <li>Purpose: Data structure definitions and validation</li> <li>Responsibilities:</li> <li>Pydantic model definitions for request/response</li> <li>Data validation rules and constraints</li> <li>Serialization/deserialization logic</li> <li>Type safety enforcement</li> </ul>"},{"location":"internal-design/#settings-configuration-management","title":"<code>settings/</code> - Configuration Management","text":"<ul> <li>Purpose: Environment-based configuration</li> <li>Responsibilities:</li> <li>Environment variable loading</li> <li>Service connection configuration</li> <li>Feature flag management</li> <li>Logging configuration</li> </ul>"},{"location":"internal-design/#service-communication-flow","title":"Service Communication Flow","text":""},{"location":"internal-design/#request-processing-flow","title":"Request Processing Flow","text":"<pre><code>sequenceDiagram\n    participant Client\n    participant Router\n    participant Repository\n    participant Azure\n    participant Logger\n\n    Client-&gt;&gt;Router: HTTP Request\n    Router-&gt;&gt;Logger: Log request start\n    Router-&gt;&gt;Router: Validate request data\n    Router-&gt;&gt;Repository: Call business method\n    Repository-&gt;&gt;Azure: External service call\n    Azure--&gt;&gt;Repository: Service response\n    Repository-&gt;&gt;Repository: Transform data\n    Repository--&gt;&gt;Router: Return result\n    Router-&gt;&gt;Logger: Log request completion\n    Router--&gt;&gt;Client: HTTP Response\n</code></pre>"},{"location":"internal-design/#error-handling-flow","title":"Error Handling Flow","text":"<pre><code>sequenceDiagram\n    participant Client\n    participant Router\n    participant Repository\n    participant Azure\n    participant Logger\n\n    Client-&gt;&gt;Router: HTTP Request\n    Router-&gt;&gt;Repository: Call method\n    Repository-&gt;&gt;Azure: Service call\n    Azure--&gt;&gt;Repository: Service error\n    Repository-&gt;&gt;Logger: Log error details\n    Repository-&gt;&gt;Repository: Transform to application error\n    Repository--&gt;&gt;Router: Raise HTTPException\n    Router-&gt;&gt;Logger: Log error response\n    Router--&gt;&gt;Client: Error response (4xx/5xx)\n</code></pre>"},{"location":"internal-design/#agent-system-architecture","title":"Agent System Architecture","text":""},{"location":"internal-design/#langgraph-agent-flow","title":"LangGraph Agent Flow","text":"<pre><code>flowchart TD\n    Request[User Request] --&gt; LangRouter[LangGraph Router]\n    LangRouter --&gt; ToolSelector[Tool Selection]\n\n    ToolSelector --&gt; Calculator[Calculator Tool]\n    ToolSelector --&gt; TimeQuery[Time Query Tool]\n    ToolSelector --&gt; WebSearch[Web Search Tool]\n\n    Calculator --&gt; MathExecution[Math Expression Eval]\n    TimeQuery --&gt; TimeAPI[System Time API]\n    WebSearch --&gt; SearchAPI[External Search API]\n\n    MathExecution --&gt; Response[Formatted Response]\n    TimeAPI --&gt; Response\n    SearchAPI --&gt; Response\n\n    Response --&gt; LangRouter\n    LangRouter --&gt; Client[Client Response]\n</code></pre>"},{"location":"internal-design/#azure-ai-foundry-agent-flow","title":"Azure AI Foundry Agent Flow","text":"<pre><code>sequenceDiagram\n    participant Client\n    participant Router\n    participant Repository\n    participant AIFoundry\n    participant Thread\n\n    Client-&gt;&gt;Router: Create Agent Request\n    Router-&gt;&gt;Repository: Create Agent\n    Repository-&gt;&gt;AIFoundry: POST /agents\n    AIFoundry--&gt;&gt;Repository: Agent Created\n    Repository--&gt;&gt;Router: Agent Response\n    Router--&gt;&gt;Client: Agent Details\n\n    Client-&gt;&gt;Router: Chat Request\n    Router-&gt;&gt;Repository: Chat with Agent\n    Repository-&gt;&gt;Thread: Retrieve/Create Thread\n    Repository-&gt;&gt;AIFoundry: POST /threads/{id}/messages\n    AIFoundry--&gt;&gt;Repository: Message Response\n    Repository--&gt;&gt;Router: Chat Response\n    Router--&gt;&gt;Client: AI Response\n</code></pre>"},{"location":"internal-design/#data-models-and-relationships","title":"Data Models and Relationships","text":""},{"location":"internal-design/#core-entity-relationships","title":"Core Entity Relationships","text":"<pre><code>erDiagram\n    Item ||--o{ ItemSearch : searchable\n    Restaurant ||--o{ RestaurantLocation : \"has location\"\n    Restaurant ||--o{ RestaurantEmbedding : \"has embedding\"\n\n    File ||--|| BlobMetadata : \"stored as\"\n\n    TranscriptionJob ||--o{ TranscriptionFile : \"produces\"\n    TranscriptionJob ||--|| AudioSource : \"processes\"\n\n    Agent ||--o{ Thread : \"manages\"\n    Thread ||--o{ Message : \"contains\"\n\n    ChatSession ||--o{ WebSocketConnection : \"maintains\"\n\n    Item {\n        string id PK\n        string name\n        string description\n        float price\n        float tax\n    }\n\n    Restaurant {\n        string id PK\n        string name\n        string description\n        string cuisine_type\n        float latitude\n        float longitude\n        float rating\n    }\n\n    File {\n        string name PK\n        int size\n        string content_type\n        datetime last_modified\n        string url\n    }\n\n    Agent {\n        string id PK\n        string name\n        string model\n        string instructions\n        datetime created_at\n    }\n\n    Thread {\n        string id PK\n        string agent_id FK\n        datetime created_at\n        json metadata\n    }\n</code></pre>"},{"location":"internal-design/#service-integration-patterns","title":"Service Integration Patterns","text":""},{"location":"internal-design/#repository-pattern-implementation","title":"Repository Pattern Implementation","text":"<pre><code>classDiagram\n    class BaseRepository {\n        &lt;&lt;abstract&gt;&gt;\n        +logger: Logger\n        +settings: Settings\n        +initialize_client()\n        +handle_errors()\n    }\n\n    class ItemRepository {\n        +cosmos_client: CosmosClient\n        +list_items(limit, offset)\n        +get_item(id)\n        +create_item(item)\n        +update_item(id, item)\n        +delete_item(id)\n        +search_items(query)\n    }\n\n    class FileRepository {\n        +blob_client: BlobServiceClient\n        +list_files(prefix)\n        +upload_file(name, data)\n        +download_file(name)\n        +delete_file(name)\n        +get_file_info(name)\n    }\n\n    class RestaurantRepository {\n        +cosmos_client: CosmosClient\n        +openai_client: OpenAIClient\n        +list_restaurants(limit, offset)\n        +search_restaurants(query, k)\n        +find_nearby_restaurants(lat, lng, radius)\n    }\n\n    BaseRepository &lt;|-- ItemRepository\n    BaseRepository &lt;|-- FileRepository\n    BaseRepository &lt;|-- RestaurantRepository\n</code></pre>"},{"location":"internal-design/#configuration-management-pattern","title":"Configuration Management Pattern","text":"<pre><code>classDiagram\n    class BaseSettings {\n        &lt;&lt;abstract&gt;&gt;\n        +env_prefix: str\n        +validate_settings()\n    }\n\n    class AzureOpenAISettings {\n        +endpoint: str\n        +api_key: str\n        +api_version: str\n        +model_chat: str\n        +model_embedding: str\n    }\n\n    class AzureCosmosDBSettings {\n        +connection_string: str\n        +database_name: str\n        +container_name: str\n    }\n\n    class LoggingSettings {\n        +log_level: str\n        +configure_logging()\n        +get_logger(name)\n    }\n\n    BaseSettings &lt;|-- AzureOpenAISettings\n    BaseSettings &lt;|-- AzureCosmosDBSettings\n    BaseSettings &lt;|-- LoggingSettings\n</code></pre>"},{"location":"internal-design/#security-and-monitoring-integration","title":"Security and Monitoring Integration","text":""},{"location":"internal-design/#logging-and-telemetry-flow","title":"Logging and Telemetry Flow","text":"<pre><code>flowchart TD\n    App[FastAPI Application] --&gt; LogConfig[Logging Configuration]\n    LogConfig --&gt; StructuredLogs[Structured Logging]\n\n    App --&gt; OpenTelemetry[OpenTelemetry SDK]\n    OpenTelemetry --&gt; Traces[Distributed Tracing]\n    OpenTelemetry --&gt; Metrics[Custom Metrics]\n\n    StructuredLogs --&gt; AppInsights[Application Insights]\n    Traces --&gt; AppInsights\n    Metrics --&gt; AppInsights\n\n    AppInsights --&gt; Dashboard[Azure Dashboard]\n    AppInsights --&gt; Alerts[Alert Rules]\n\n    LogConfig --&gt; Console[Console Output]\n    LogConfig --&gt; FileOutput[File Output]\n</code></pre>"},{"location":"internal-design/#environment-based-configuration","title":"Environment-based Configuration","text":"<pre><code>flowchart LR\n    EnvTemplate[.env.template] --&gt; LocalEnv[.env]\n    EnvTemplate --&gt; ProdEnv[Production Environment]\n\n    LocalEnv --&gt; DevConfig[Development Settings]\n    ProdEnv --&gt; ProdConfig[Production Settings]\n\n    DevConfig --&gt; LocalServices[Local/Mock Services]\n    ProdConfig --&gt; AzureServices[Azure Cloud Services]\n\n    DevConfig --&gt; DebugLogging[DEBUG Logging]\n    ProdConfig --&gt; InfoLogging[INFO Logging]\n</code></pre>"},{"location":"internal-design/#performance-and-scalability-considerations","title":"Performance and Scalability Considerations","text":""},{"location":"internal-design/#caching-strategy","title":"Caching Strategy","text":"<pre><code>graph TB\n    Request[Client Request] --&gt; FastAPI[FastAPI Router]\n    FastAPI --&gt; Cache{Cache Hit?}\n\n    Cache --&gt;|Yes| CacheReturn[Return Cached Response]\n    Cache --&gt;|No| Repository[Repository Layer]\n\n    Repository --&gt; Azure[Azure Services]\n    Azure --&gt; Repository\n    Repository --&gt; CacheStore[Store in Cache]\n    CacheStore --&gt; Response[Return Response]\n\n    CacheReturn --&gt; Client[Client Response]\n    Response --&gt; Client\n</code></pre>"},{"location":"internal-design/#connection-pooling","title":"Connection Pooling","text":"<pre><code>graph LR\n    App[Application Startup] --&gt; PoolInit[Initialize Connection Pools]\n\n    PoolInit --&gt; CosmosPool[CosmosDB Pool]\n    PoolInit --&gt; BlobPool[Blob Storage Pool]\n    PoolInit --&gt; OpenAIPool[OpenAI Pool]\n\n    Request[Request Handler] --&gt; PoolManager[Connection Pool Manager]\n    PoolManager --&gt; CosmosPool\n    PoolManager --&gt; BlobPool\n    PoolManager --&gt; OpenAIPool\n\n    CosmosPool --&gt; CosmosOps[Database Operations]\n    BlobPool --&gt; BlobOps[Storage Operations]\n    OpenAIPool --&gt; AIOps[AI Operations]\n</code></pre>"},{"location":"internal-design/#testing-strategy","title":"Testing Strategy","text":""},{"location":"internal-design/#test-architecture","title":"Test Architecture","text":"<pre><code>graph TB\n    subgraph \"Test Layers\"\n        UnitTests[Unit Tests]\n        IntegrationTests[Integration Tests]\n        E2ETests[End-to-End Tests]\n    end\n\n    subgraph \"Test Utilities\"\n        Fixtures[Pytest Fixtures]\n        Mocks[Mock Services]\n        TestClient[FastAPI TestClient]\n    end\n\n    subgraph \"Coverage Areas\"\n        RouterTests[Router Layer Tests]\n        RepoTests[Repository Tests]\n        ModelTests[Model Validation Tests]\n        CoreTests[Core Logic Tests]\n    end\n\n    UnitTests --&gt; RouterTests\n    UnitTests --&gt; RepoTests\n    UnitTests --&gt; ModelTests\n    UnitTests --&gt; CoreTests\n\n    Fixtures --&gt; UnitTests\n    Mocks --&gt; UnitTests\n    TestClient --&gt; IntegrationTests\n</code></pre> <p>This internal design specification provides a comprehensive view of the application's architecture, data flow, and component interactions, enabling developers to understand and extend the system effectively.</p>"}]}